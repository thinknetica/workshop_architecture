services:
  postgresql_master:
    image: postgres:17
    container_name: master
    restart: always
    networks:
      - db-repl
    volumes:
      - ./db/data/master:/var/lib/postgresql/data
      - ./db/master/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
      - ./db/master/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env.postgresql

  postgresql_slave:
    image: postgres:17
    container_name: slave
    restart: always
    networks:
      - db-repl
    volumes:
      - ./db/slave/.pgpass:/var/lib/postgresql/.pgpass
      - ./db/slave/.pgpass:/root/.pgpass
      - ./db/data/slave/:/var/lib/postgresql/data
      - ./db/master/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
      - ./db/slave/init-slave.sh:/var/lib/postgresql/init-slave.sh
    env_file:
      - ./.env.postgresql

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_db:/data/db
    networks:
      - db-repl

  web:
    tty: true
    stdin_open: true
    image: library
    container_name: library
    build:
      context: .
    env_file:
      ".env"
    command: >
      sh -c "rm -f tmp/pids/server.pid &&
             bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/rails
      - "$DOCKER_COMPOSE_ARCHIVE_FOLDER:/rails/db/data"
    networks:
      - db-repl
    ports:
      - "3000:3000"
    depends_on:
      - postgresql_master
      - mongo
      - redis
    environment:
      RAILS_LOG_TO_STDOUT: 'yes'
      PAGER: 'more'
  redis:
    image: redis:latest
    networks:
      - db-repl
    volumes:
      - redis:/data

networks:
  db-repl:
    driver: bridge
    name: db-repl
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1

volumes:
  db:
  redis:
  mongo_db:
